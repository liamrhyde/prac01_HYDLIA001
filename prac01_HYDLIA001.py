#!/usr/bin/python3"""Python Practical TemplateKeegan CrankshawReadjust this Docstring as follows:Names: <Liam Hyde>Student Number: <HYDLIA001>Prac: <Prac 1>Date: <23/07/2019>"""# import Relevant Libraresimport RPi.GPIO as GPIOimport time# Logic that you write#PIN 18,16 is input#PIN 9,14 is ground#PIN 11,13,15 is output    #print("write your logic here")GPIO.setmode(GPIO.BOARD)GPIO.setup(13, GPIO.OUT)GPIO.setup(18, GPIO.IN, pull_up_down=GPIO.PUD_DOWN)print('18 pull down (input)')time.sleep(.5)GPIO.setup(16, GPIO.IN, pull_up_down=GPIO.PUD_DOWN)print('16 pull down (input)')time.sleep(.5)GPIO.output(13, 0)print('13 off (output)')time.sleep(1)    def callback_one(channel=18):    GPIO.output(13, 1)    print('13 on (output LED)')def callback_two(channel=18):    GPIO.output(13, 0)    print('13 off (output LED)')    GPIO.add_event_detect(18, GPIO.RISING, callback=callback_one, bouncetime=200)GPIO.add_event_detect(16, GPIO.RISING, callback=callback_two, bouncetime=200)def main():     pass   # if GPIO.input(18):    #    print('18 high')   # else:    #    print('18 not triggered')# Only run the functions ifif __name__ == "__main__":    # Make sure the GPIO is stopped correctly    try:        while True:            main()    except KeyboardInterrupt:        print("Exiting gracefully")        # Turn off your GPIOs here        GPIO.cleanup()#    except e:#        GPIO.cleanup()#        print("Some other error occurred")#        print(e.message)